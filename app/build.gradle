plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-android-extensions"
    id "kotlin-kapt"
}

//定义打包时间
static def releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.jeanboy.app.flavors"

        minSdkVersion 21
        targetSdkVersion 31

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles "consumer-rules.pro"
    }

    // 配置签名文件
    signingConfigs {
        debug {
            storeFile file('../resources/test.jks') // 密钥文件位置
            storePassword 'test123' // 密钥密码
            keyAlias 'test' // 密钥别名
            keyPassword 'test123' // 别名密码
        }

        release {
            storeFile file('../resources/test1.jks')
            storePassword 'test123'
            keyAlias 'test'
            keyPassword 'test123'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            applicationIdSuffix ".debug" // 自定义 application id 后缀
            versionNameSuffix "-debug" // 自定义版本名后缀
            buildConfigField "boolean", "LOG_DEBUG", "true"

            signingConfig signingConfigs.debug // 自定义签名文件
        }

        release {
            minifyEnabled true // 是否开启代码混淆
            shrinkResources true // 移除无用的资源文件，依赖于 minifyEnabled 必须一起用
            multiDexEnabled true // 解决65535
            zipAlignEnabled true // 对齐 zip
            debuggable false // 是否 debug
            buildConfigField "boolean", "LOG_DEBUG", "false"

            signingConfig signingConfigs.release
        }
    }

    // 渠道维度
    flavorDimensions "default"
    // 渠道配置
    productFlavors {
//        googlePlay {
//            dimension "default"
//            versionCode 1 // 自定义 version code
//            versionName "0.0.1" // 自定义 version name
//            // 自定义 manifest 中替换值，如：渠道号
//            resValue("string", "channel", "googlePlay")
//            resValue("string", "test_app_id", "googlePlay")
//            // 自定义 混淆文件
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), './src/main_google_play/proguard-rules.pro'
//        }
//
//        local {
//            dimension "default"
//            versionCode 10
//            versionName "1.0.1"
//            resValue("string", "channel", "local")
//            resValue("string", "test_app_id", "local")
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), './src/main_local/proguard-rules.pro'
//        }

        phone {
            dimension "default"
            applicationId "com.jeanboy.app.flavors.phone"
            // 自定义 buildConfig.java 中的变量供代码中使用
            buildConfigField "String", "platform", '"phone"'
            resValue("string", "flavors_name", "phone flavors")
            manifestPlaceholders = [
                    channelName : "phone_channel"
            ]
        }

        pad {
            dimension "default"
            applicationId "com.jeanboy.app.flavors.pad"
            // 自定义 buildConfig.java 中的变量供代码中使用
            buildConfigField "String", "platform", '"pad"'
            resValue("string", "flavors_name", "pad flavors")
            manifestPlaceholders = [
                    channelName : "pad_channel"
            ]
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDirs = ['libs']
        }

//        googlePlay {
//            manifest.srcFile 'src/main_google_play/AndroidManifest.xml'
//            java.srcDirs = ['src/main_google_play/java']
//            res.srcDirs = ['src/main_google_play/res']
//        }
//
//        local {
//            manifest.srcFile 'src/main_local/AndroidManifest.xml'
//            java.srcDirs = ['src/main_local/java']
//            res.srcDirs = ['src/main_local/res']
//        }

        phone {
            manifest.srcFile 'src/main_phone/AndroidManifest.xml'
            java.srcDirs = ['src/main_phone/java']
            res.srcDirs = ['src/main_phone/res']
        }

        pad {
            manifest.srcFile 'src/main_pad/AndroidManifest.xml'
            java.srcDirs = ['src/main_pad/java']
            res.srcDirs = ['src/main_pad/res']
        }
    }

    // 打包重命名
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all { output ->
                def fileName = output.outputFile.name
                if (fileName.endsWith(".apk")) {
                    def apkName = "${variant.productFlavors[0].name}-v${variant.versionName}-${releaseTime()}.apk";
                    outputFileName = apkName
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'


    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.20"
//    implementation "androidx.core:core-ktx:$versions.ktxCore"
//    implementation "androidx.collection:collection-ktx:$versions.ktxCoroutines"
//    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"


    implementation project(':module_test')
}
